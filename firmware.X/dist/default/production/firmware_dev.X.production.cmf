%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$dist/default/production/firmware_dev.X.production.obj
cinit CODE 0 10 10 B 2
text1 CODE 0 F8 F8 11 2
text2 CODE 0 E6 E6 12 2
text3 CODE 0 1B 1B CB 2
maintext CODE 0 10E 10E 2 2
cstackCOMMON COMMON 1 70 70 B 1
intentry CODE 0 4 4 B 2
bssBANK0 BANK0 1 20 20 5 1
swtext1 CONST 0 109 109 5 2
bssCOMMON COMMON 1 7B 7B 3 1
$/tmp/xcXeM8Njj.obj
reset_vec CODE 0 0 0 1 2
end_init CODE 0 F F 1 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 25-6F 1
RAM A0-BF 1
BANK0 25-6F 1
BANK1 A0-BF 1
CONST 1-3 2
CONST 110-7FF 2
ENTRY 1-3 2
ENTRY 110-7FF 2
IDLOC 2000-2003 2
STACK 25-6F 1
CODE 1-3 2
CODE 110-7FF 2
SFR0 0-1F 1
SFR1 80-9F 1
CONFIG 2007-2007 2
STRCODE 1-3 2
STRCODE 110-7FF 2
STRING 1-3 2
STRING 110-7FF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$dist/default/production/firmware_dev.X.production.obj
10 cinit CODE >189:/tmp/xcXCdbzJE
10 cinit CODE >192:/tmp/xcXCdbzJE
10 cinit CODE >218:/tmp/xcXCdbzJE
11 cinit CODE >219:/tmp/xcXCdbzJE
12 cinit CODE >220:/tmp/xcXCdbzJE
13 cinit CODE >223:/tmp/xcXCdbzJE
14 cinit CODE >224:/tmp/xcXCdbzJE
15 cinit CODE >225:/tmp/xcXCdbzJE
16 cinit CODE >226:/tmp/xcXCdbzJE
17 cinit CODE >227:/tmp/xcXCdbzJE
18 cinit CODE >228:/tmp/xcXCdbzJE
19 cinit CODE >234:/tmp/xcXCdbzJE
19 cinit CODE >236:/tmp/xcXCdbzJE
1A cinit CODE >237:/tmp/xcXCdbzJE
4 intentry CODE >12:/firmware/firmware_dev.X/main.c
109 swtext1 CONST >60:/firmware/firmware_dev.X/ir_decoder.c
1B text3 CODE >48:/firmware/firmware_dev.X/ir_decoder.c
1B text3 CODE >54:/firmware/firmware_dev.X/ir_decoder.c
21 text3 CODE >57:/firmware/firmware_dev.X/ir_decoder.c
25 text3 CODE >61:/firmware/firmware_dev.X/ir_decoder.c
25 text3 CODE >63:/firmware/firmware_dev.X/ir_decoder.c
27 text3 CODE >65:/firmware/firmware_dev.X/ir_decoder.c
29 text3 CODE >66:/firmware/firmware_dev.X/ir_decoder.c
2B text3 CODE >67:/firmware/firmware_dev.X/ir_decoder.c
2C text3 CODE >68:/firmware/firmware_dev.X/ir_decoder.c
2D text3 CODE >69:/firmware/firmware_dev.X/ir_decoder.c
2D text3 CODE >71:/firmware/firmware_dev.X/ir_decoder.c
2F text3 CODE >72:/firmware/firmware_dev.X/ir_decoder.c
33 text3 CODE >73:/firmware/firmware_dev.X/ir_decoder.c
34 text3 CODE >76:/firmware/firmware_dev.X/ir_decoder.c
3C text3 CODE >77:/firmware/firmware_dev.X/ir_decoder.c
40 text3 CODE >78:/firmware/firmware_dev.X/ir_decoder.c
41 text3 CODE >79:/firmware/firmware_dev.X/ir_decoder.c
42 text3 CODE >82:/firmware/firmware_dev.X/ir_decoder.c
43 text3 CODE >83:/firmware/firmware_dev.X/ir_decoder.c
44 text3 CODE >84:/firmware/firmware_dev.X/ir_decoder.c
44 text3 CODE >86:/firmware/firmware_dev.X/ir_decoder.c
46 text3 CODE >87:/firmware/firmware_dev.X/ir_decoder.c
4A text3 CODE >88:/firmware/firmware_dev.X/ir_decoder.c
4B text3 CODE >90:/firmware/firmware_dev.X/ir_decoder.c
53 text3 CODE >91:/firmware/firmware_dev.X/ir_decoder.c
54 text3 CODE >92:/firmware/firmware_dev.X/ir_decoder.c
55 text3 CODE >95:/firmware/firmware_dev.X/ir_decoder.c
56 text3 CODE >96:/firmware/firmware_dev.X/ir_decoder.c
5A text3 CODE >97:/firmware/firmware_dev.X/ir_decoder.c
5B text3 CODE >98:/firmware/firmware_dev.X/ir_decoder.c
5B text3 CODE >99:/firmware/firmware_dev.X/ir_decoder.c
5D text3 CODE >100:/firmware/firmware_dev.X/ir_decoder.c
61 text3 CODE >101:/firmware/firmware_dev.X/ir_decoder.c
62 text3 CODE >104:/firmware/firmware_dev.X/ir_decoder.c
6A text3 CODE >105:/firmware/firmware_dev.X/ir_decoder.c
6B text3 CODE >106:/firmware/firmware_dev.X/ir_decoder.c
6C text3 CODE >107:/firmware/firmware_dev.X/ir_decoder.c
70 text3 CODE >108:/firmware/firmware_dev.X/ir_decoder.c
71 text3 CODE >110:/firmware/firmware_dev.X/ir_decoder.c
72 text3 CODE >111:/firmware/firmware_dev.X/ir_decoder.c
72 text3 CODE >112:/firmware/firmware_dev.X/ir_decoder.c
74 text3 CODE >113:/firmware/firmware_dev.X/ir_decoder.c
78 text3 CODE >114:/firmware/firmware_dev.X/ir_decoder.c
79 text3 CODE >116:/firmware/firmware_dev.X/ir_decoder.c
81 text3 CODE >118:/firmware/firmware_dev.X/ir_decoder.c
A0 text3 CODE >119:/firmware/firmware_dev.X/ir_decoder.c
A9 text3 CODE >121:/firmware/firmware_dev.X/ir_decoder.c
C6 text3 CODE >122:/firmware/firmware_dev.X/ir_decoder.c
C7 text3 CODE >124:/firmware/firmware_dev.X/ir_decoder.c
C8 text3 CODE >125:/firmware/firmware_dev.X/ir_decoder.c
C9 text3 CODE >128:/firmware/firmware_dev.X/ir_decoder.c
CD text3 CODE >129:/firmware/firmware_dev.X/ir_decoder.c
D1 text3 CODE >130:/firmware/firmware_dev.X/ir_decoder.c
D3 text3 CODE >131:/firmware/firmware_dev.X/ir_decoder.c
D4 text3 CODE >132:/firmware/firmware_dev.X/ir_decoder.c
D5 text3 CODE >133:/firmware/firmware_dev.X/ir_decoder.c
D9 text3 CODE >136:/firmware/firmware_dev.X/ir_decoder.c
DA text3 CODE >60:/firmware/firmware_dev.X/ir_decoder.c
E5 text3 CODE >137:/firmware/firmware_dev.X/ir_decoder.c
E6 text2 CODE >12:/firmware/firmware_dev.X/main.c
E6 text2 CODE >13:/firmware/firmware_dev.X/main.c
EB text2 CODE >14:/firmware/firmware_dev.X/main.c
EC text2 CODE >16:/firmware/firmware_dev.X/main.c
F8 text1 CODE >139:/firmware/firmware_dev.X/ir_decoder.c
F8 text1 CODE >141:/firmware/firmware_dev.X/ir_decoder.c
FA text1 CODE >143:/firmware/firmware_dev.X/ir_decoder.c
FC text1 CODE >144:/firmware/firmware_dev.X/ir_decoder.c
FD text1 CODE >145:/firmware/firmware_dev.X/ir_decoder.c
FE text1 CODE >146:/firmware/firmware_dev.X/ir_decoder.c
100 text1 CODE >147:/firmware/firmware_dev.X/ir_decoder.c
101 text1 CODE >148:/firmware/firmware_dev.X/ir_decoder.c
102 text1 CODE >149:/firmware/firmware_dev.X/ir_decoder.c
10E maintext CODE >18:/firmware/firmware_dev.X/main.c
10E maintext CODE >19:/firmware/firmware_dev.X/main.c
10F maintext CODE >21:/firmware/firmware_dev.X/main.c
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 0 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
__end_of_timer1_interrupt_decoder 1CC 0 CODE 0 text3 dist/default/production/firmware_dev.X.production.obj
__Hspace_0 110 0 ABS 0 - -
__Hspace_1 7E 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
_T1CONbits 10 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
__Hstrings 0 0 ABS 0 strings -
___sp 0 0 STACK 2 stack /tmp/xcXeM8Njj.obj
_main 21C 0 CODE 0 maintext dist/default/production/firmware_dev.X.production.obj
btemp 7E 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
start 1E 0 CODE 0 init /tmp/xcXeM8Njj.obj
__size_of_main 0 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
__HbssCOMMON 0 0 ABS 0 bssCOMMON -
__Hpowerup 0 0 CODE 0 powerup -
_setup_ir_decoder 1F0 0 CODE 0 text1 dist/default/production/firmware_dev.X.production.obj
timer1_interrupt_decoder@bit_count 7C 0 COMMON 1 bssCOMMON dist/default/production/firmware_dev.X.production.obj
intlevel0 0 0 ENTRY 0 functab /tmp/xcXeM8Njj.obj
intlevel1 0 0 ENTRY 0 functab /tmp/xcXeM8Njj.obj
intlevel2 0 0 ENTRY 0 functab /tmp/xcXeM8Njj.obj
intlevel3 0 0 ENTRY 0 functab /tmp/xcXeM8Njj.obj
intlevel4 0 0 ENTRY 0 functab /tmp/xcXeM8Njj.obj
intlevel5 0 0 ENTRY 0 functab /tmp/xcXeM8Njj.obj
__LbssCOMMON 0 0 ABS 0 bssCOMMON -
wtemp0 7E 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
timer1_interrupt_decoder@state_timer 7B 0 COMMON 1 bssCOMMON dist/default/production/firmware_dev.X.production.obj
__Lmaintext 0 0 ABS 0 maintext -
__end_of_setup_ir_decoder 212 0 CODE 0 text1 dist/default/production/firmware_dev.X.production.obj
__size_of_setup_ir_decoder 0 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
timer1_interrupt_decoder@decoder_state 24 0 BANK0 1 bssBANK0 dist/default/production/firmware_dev.X.production.obj
start_initialization 20 0 CODE 0 cinit dist/default/production/firmware_dev.X.production.obj
_TRISBbits 86 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
__pcstackBANK0 0 0 BANK0 1 cstackBANK0 dist/default/production/firmware_dev.X.production.obj
___int_sp 0 0 STACK 2 stack /tmp/xcXeM8Njj.obj
__Hbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Hcinit 36 0 CODE 0 cinit -
__Hidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
__Hmaintext 0 0 ABS 0 maintext -
__Hcommon 0 0 ABS 0 common -
__Hconfig 0 0 CONFIG 0 config -
__Lbank0 0 0 ABS 0 bank0 -
__Lbank1 0 0 ABS 0 bank1 -
__Lcinit 20 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 0 idloc -
__Lstack 0 0 STACK 2 stack -
_PORTBbits 6 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
_INTCONbits B 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hinit 1E 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Linit 1E 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Ltext 0 0 ABS 0 text -
__LcstackBANK0 0 0 ABS 0 cstackBANK0 -
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
__S0 110 0 ABS 0 - -
__S1 7E 0 ABS 0 - -
__S2 0 0 ABS 0 - -
_isr 1CC 0 CODE 0 text2 dist/default/production/firmware_dev.X.production.obj
saved_w 7E 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
__end_of_isr 1F0 0 CODE 0 text2 dist/default/production/firmware_dev.X.production.obj
__Lintentry 8 0 CODE 0 intentry -
reset_vec 0 0 CODE 0 reset_vec /tmp/xcXeM8Njj.obj
__LbssBANK0 0 0 ABS 0 bssBANK0 -
_PIE1bits 8C 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
_timer1_interrupt_decoder 36 0 CODE 0 text3 dist/default/production/firmware_dev.X.production.obj
__pmaintext 21C 0 CODE 0 maintext dist/default/production/firmware_dev.X.production.obj
__Lcommon 0 0 ABS 0 common -
__Lconfig 0 0 CONFIG 0 config -
stackhi 0 0 ABS 0 - /tmp/xcXeM8Njj.obj
stacklo 0 0 ABS 0 - /tmp/xcXeM8Njj.obj
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__pbssCOMMON 7B 0 COMMON 1 bssCOMMON dist/default/production/firmware_dev.X.production.obj
__HcstackBANK0 0 0 ABS 0 cstackBANK0 -
_ir_data_valid 7D 0 COMMON 1 bssCOMMON dist/default/production/firmware_dev.X.production.obj
_PIR1bits C 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
__Lend_init 1E 0 CODE 0 end_init -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
end_of_initialization 32 0 CODE 0 cinit dist/default/production/firmware_dev.X.production.obj
__Hintentry 1E 0 CODE 0 intentry -
__Lstrings 0 0 ABS 0 strings -
__Hreset_vec 2 0 CODE 0 reset_vec -
__HbssBANK0 0 0 ABS 0 bssBANK0 -
__ptext1 1F0 0 CODE 0 text1 dist/default/production/firmware_dev.X.production.obj
__ptext2 1CC 0 CODE 0 text2 dist/default/production/firmware_dev.X.production.obj
__ptext3 36 0 CODE 0 text3 dist/default/production/firmware_dev.X.production.obj
_ir_data 20 0 BANK0 1 bssBANK0 dist/default/production/firmware_dev.X.production.obj
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__Lreset_vec 0 0 CODE 0 reset_vec -
__size_of_timer1_interrupt_decoder 0 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
__end_of__initialization 32 0 CODE 0 cinit dist/default/production/firmware_dev.X.production.obj
__Lfunctab 0 0 ENTRY 0 functab -
__Lclrtext 0 0 ABS 0 clrtext -
__pcstackCOMMON 70 0 COMMON 1 cstackCOMMON dist/default/production/firmware_dev.X.production.obj
__Hend_init 20 0 CODE 0 end_init -
__end_of_main 220 0 CODE 0 maintext dist/default/production/firmware_dev.X.production.obj
_TMR1H F 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
_TMR1L E 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
interrupt_function 8 0 CODE 0 intentry dist/default/production/firmware_dev.X.production.obj
__pintentry 8 0 CODE 0 intentry dist/default/production/firmware_dev.X.production.obj
__size_of_isr 0 0 ABS 0 - dist/default/production/firmware_dev.X.production.obj
__initialization 20 0 CODE 0 cinit dist/default/production/firmware_dev.X.production.obj
__pbssBANK0 20 0 BANK0 1 bssBANK0 dist/default/production/firmware_dev.X.production.obj
__pswtext1 212 0 CONST 0 swtext1 dist/default/production/firmware_dev.X.production.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
maintext 0 10E 21C 2 2
cstackCOMMON 1 70 70 E 1
intentry 0 4 8 105 2
reset_vec 0 0 0 1 2
bssBANK0 1 20 20 5 1
swtext1 0 109 212 5 2
